<?php
class AuthController extends Gravity_Controller_Action {
    public function loginAction() {
        $form = new Application_Form_Login();
        if ($this->getRequest()->isPost()) {
            if ($form->populate($this->getRequest()->getPost())) {
                $userSession = Zedo_Core::getEntitySingleton('session/user');
                if ($userSession->processLogin($form->getValues())) {
                    $this->_helper->redirector('index', 'home');
                    return;
                }
            }
        }

        $this->view->login = $form;
    }

    public function facebookAction() {
        $appId = Zend_Registry::get('facebook_appId');
        $appSecret = Zend_Registry::get('facebook_appSecret');
        $callbackUrl = Zend_Registry::get('facebook_callbackUrl')
                . "/{$this->getRequest()->getControllerName()}"
                . "/{$this->getRequest()->getActionName()}";

        $facebookSession = new Zend_Session_Namespace('facebook');

        // Redirect if we have no code at all
        if (is_null($this->getRequest()->getParam('code', $facebookSession->code))) {
            $facebookSession->state = md5(uniqid(time(), true));
            $dialogUrl = "https://www.facebook.com/dialog/oauth?client_id="
                    . $appId . "&redirect_uri=" . urlencode($callbackUrl) . "&state="
                    . $facebookSession->state . "&scope=user_birthday";
            Gravity_Core::log($dialogUrl);
            header('Location: ' . $dialogUrl);
            exit;
        }

        // Set the code in the session if it isn't already
        if (!$facebookSession->code) {
            $facebookSession->code = $this->getRequest()->getParam('code');
        }

        if ($this->getRequest()->getParam('state') != $facebookSession->state) {
            $this->log('Invalid state, may be CSRF.');
             
            $this->_helper->redirector('index', 'index');
        }

        $facebook = new Facebook(array('appId' => $appId, 'secret' => $appSecret));

        $accessToken =
            $this->_getFacebookAccessToken($appId, $appSecret, $callbackUrl, $facebookSession->code);
        $facebook->setAccessToken($accessToken);

        try {
            $facebookUser = $facebook->api('/me');
        } catch (Exception $e) {
            $this->log("No active access token : {$accessToken}");
            $this->_forward('index', 'index');
        }

        $facebookSession->id = $facebookUser['id'];
        $user = Zedo_Core::getRepository('user')->findOneBy(array('facebook_id' => $facebookSession->id));
        $userSession = Zedo_Core::getEntitySingleton('session/user');
        if ($user && $userSession->processLogin(array('email' => $user->getEmail(), 'password' => $user->getPassword()))) {
            $this->_helper->redirector('index', 'home');
            return;
        }

        $registerForm = new Application_Form_User_Register_Facebook();
        $registerForm->gender->setValue($facebookUser['gender']);
        $registerForm->first_name->setValue($facebookUser['first_name']);
        $registerForm->surname->setValue($facebookUser['last_name']);
        $registerForm->date_of_birth->setValue($facebookUser['birthday']);

        $this->view->registerForm = $registerForm;
    }

    public function _getFacebookAccessToken($appId, $appSecret, $callbackUrl, $code) {
        $accessTokenRequestParams = array(
            'client_id' => $appId,
            'client_secret' => $appSecret,
            'redirect_uri' => $callbackUrl,
            'code' => $code,
        );

        $client = new Zend_Http_Client(
                        "https://graph.facebook.com/oauth/access_token",
                        array('adapter' => new Zend_Http_Client_Adapter_Curl())
        );

        $client->setParameterGet($accessTokenRequestParams);

        $response = $client->request()->getBody();
        $params = null;
        parse_str($response, $params);

        if (!array_key_exists('access_token', $params)) {
            $this->log("Failed facebook authentication : " . $response);
            return;
        }

        return $params['access_token'];
    }

    public function logoutAction() {
        Zedo_Core::getEntitySingleton('session/user')->logout();
        $this->_helper->redirector('index', 'index');
    }

    public function registerAction() {
        $registerForm = new Application_Form_User_Register();

        $errors = $this->validateFormPost($registerForm);
        if (count($errors) == 0) {
            $register = $this->_em
                    ->getRepository('Application_Model_Entities_User')
                    ->register($registerForm->getValues());

            if ($register) {
                $userSession = Zedo_Core::getEntitySingleton('session/user');
                $userSession->processLogin($registerForm->getValues());
                if (!$this->_isAjax()) {
                    $this->_helper->redirector('tags', 'user');
                }
            } else {
                $errors = array('something went wrong lulz');
                $registerForm->setErrorMessages($errors);
            }
        }

        if ($this->setAjaxErrorResponse($errors)) {
            return;
        }

        $this->view->registerForm = $registerForm;
    }
}
